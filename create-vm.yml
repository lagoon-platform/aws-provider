- hosts: localhost
  connection: local
  gather_facts: false
  vars:
    client_name: "tb"
    instance_type: "t2.micro"
    ami_id: "ami-f90a4880"
    vpc_id: "vpc-880aeaef"
    region: "eu-west-1"
  environment: 
    "{{proxy_env}}"
  tasks:
  - name: Create a new ec2 key pair
    ec2_key:
      name: "{{client_name}}_keypair"
      force: false
    register: keypair
  - copy: 
      content: "{{ keypair.key.private_key }}" 
      dest: "/opt/external/{{client_name}}_key.pem"
    when: keypair.changed
  - name: Security group rule descriptions
    ec2_group:
      name: "{{ client_name }}_sg"
      description: "sg for {{client_name}}"
      vpc_id: "{{ vpc_id }}"
      rules:
        - proto: tcp
          ports:
          - 22
          cidr_ip: 
          - 194.250.98.243/32
          - 81.255.178.243/32
          rule_desc: allow all on port 22  
  - name: Provision a set of instances
    ec2:
      key_name: "{{client_name}}_keypair"
      group: "{{ client_name }}_sg"
      instance_type: "{{instance_type}}"
      image: "{{ ami_id }}"
      region: "{{ region }}"
      wait: true
      exact_count: 2
      count_tag:
        Name: Demo
      instance_tags:
        Name: Demo
    register: ec2
  - debug: var=ec2
  - name: Add all instance public IPs to host group
    add_host: 
      name: "{{ item.dns_name }}"
      groups: "ec2hosts"
      public_ip: "{{ item.public_ip }}"
    loop: "{{ ec2.tagged_instances }}"
  - name: Update inventory file
    template:
      src: templates/ansible-hosts.j2
      dest: "./hosts"
#  - name: Wait for SSH to come up
#    wait_for:
#      host: '{{ item.dns_name }}'
#      port: 22
#      delay: 60
#      timeout: 320
#      state: started
#    with_items: '{{ ec2.tagged_instances }}'

