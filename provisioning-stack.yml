- hosts: localhost
  connection: local
  gather_facts: false
  vars:
    proxy_env: 
  tasks:
  - name: Include vars of client.
    include_vars:
      dir: "{{config_dir}}/input"
      extensions: 
      - yml
      name: client_params
  - set_fact:
      proxy_env: "{{client_params.proxy_env}}"
    when: client_params.proxy_env is defined
    
  - set_fact:
      lagoon_keypair_name: "{{client_params.client.name}}_{{client_params.client.uid}}"
      
  - name: Create a new ec2 key pair
    environment: "{{proxy_env}}"
    ec2_key:
      name: "{{lagoon_keypair_name}}"
      force: false
    register: keypair
  - copy: 
      content: "{{ keypair.key.private_key }}" 
      dest: "{{client_params.output_folder}}/{{client_params.client.name}}_key.pem"
    when: keypair.changed
    
  - name: Provision a set of security groups
    include_tasks: tasks/security-group.yml
    when: client_params.params.security_groups is defined
      
  - name: Provision a set of instances
    environment: "{{proxy_env}}"  
    include_tasks: tasks/instances.yml

  - name: Add proxy configuration if needed
    include_tasks: tasks/configure-proxy.yml
    when: proxy_env is defined

- import_playbook: ../core/provisioning-binaries.yml client_name="{{hostvars['localhost'].client_params.client.name}}"
- import_playbook: ../core/provisioning-swarm.yml client_name="{{hostvars['localhost'].client_params.client.name}}"
